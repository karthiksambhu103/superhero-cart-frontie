{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTIK\\\\Downloads\\\\ecomerce-frontie\\\\src\\\\FeedbackForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport OpenAI from 'openai'; // Correct import for latest version of OpenAI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedbackForm({\n  onFeedbackSubmit\n}) {\n  _s();\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFeedbackSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      var _response$choices$;\n      // Set up OpenAI API configuration with your API key\n      const openai = new OpenAI({\n        apiKey: process.env.REACT_APP_OPENAI_API_KEY // Replace with your OpenAI API key\n      });\n\n      // Call OpenAI API to classify feedback\n      const response = await openai.completions.create({\n        model: 'text-davinci-003',\n        // Use the model you want\n        prompt: `Classify the following feedback into Positive, Neutral, or Negative: \"${feedback}\"`,\n        max_tokens: 10,\n        temperature: 0 // To make it deterministic\n      });\n      const classification = (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 ? void 0 : _response$choices$.text.trim();\n\n      // Call the function to pass the classification back to the BuyNow component\n      onFeedbackSubmit(classification);\n    } catch (error) {\n      console.error('Error classifying feedback:', error);\n      alert('There was an error classifying your feedback. Please try again.');\n    } finally {\n      setLoading(false);\n      setFeedback(''); // Reset feedback input after submission\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFeedbackSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: feedback,\n        onChange: e => setFeedback(e.target.value),\n        rows: \"5\",\n        cols: \"50\",\n        placeholder: \"Enter your feedback...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px'\n        },\n        disabled: loading,\n        children: loading ? 'Submitting...' : 'Submit Feedback'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedbackForm, \"hUKecUxzPIuximApo8EiNmxecuc=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useState","OpenAI","jsxDEV","_jsxDEV","FeedbackForm","onFeedbackSubmit","_s","feedback","setFeedback","loading","setLoading","handleFeedbackSubmit","e","preventDefault","_response$choices$","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","response","completions","create","model","prompt","max_tokens","temperature","classification","choices","text","trim","error","console","alert","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","rows","cols","placeholder","required","type","marginTop","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KARTIK/Downloads/ecomerce-frontie/src/FeedbackForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport OpenAI from 'openai'; // Correct import for latest version of OpenAI\r\n\r\nfunction FeedbackForm({ onFeedbackSubmit }) {\r\n  const [feedback, setFeedback] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFeedbackSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Set up OpenAI API configuration with your API key\r\n      const openai = new OpenAI({\r\n        apiKey: process.env.REACT_APP_OPENAI_API_KEY, // Replace with your OpenAI API key\r\n      });\r\n\r\n      // Call OpenAI API to classify feedback\r\n      const response = await openai.completions.create({\r\n        model: 'text-davinci-003', // Use the model you want\r\n        prompt: `Classify the following feedback into Positive, Neutral, or Negative: \"${feedback}\"`,\r\n        max_tokens: 10,\r\n        temperature: 0, // To make it deterministic\r\n      });\r\n\r\n      const classification = response.choices[0]?.text.trim();\r\n\r\n      // Call the function to pass the classification back to the BuyNow component\r\n      onFeedbackSubmit(classification);\r\n\r\n    } catch (error) {\r\n      console.error('Error classifying feedback:', error);\r\n      alert('There was an error classifying your feedback. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n      setFeedback(''); // Reset feedback input after submission\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h2>Leave Feedback</h2>\r\n      <form onSubmit={handleFeedbackSubmit}>\r\n        <textarea\r\n          value={feedback}\r\n          onChange={(e) => setFeedback(e.target.value)}\r\n          rows=\"5\"\r\n          cols=\"50\"\r\n          placeholder=\"Enter your feedback...\"\r\n          required\r\n        />\r\n        <br />\r\n        <button type=\"submit\" style={{ marginTop: '10px' }} disabled={loading}>\r\n          {loading ? 'Submitting...' : 'Submit Feedback'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}